<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on PatoJAD | Pasion por la Tecnologia</title><link>https://patojad.com.ar/tags/docker/</link><description>Recent content in Docker on PatoJAD | Pasion por la Tecnologia</description><generator>Hugo -- gohugo.io</generator><language>es-AR</language><lastBuildDate>Wed, 22 Oct 2025 08:02:00 +0000</lastBuildDate><atom:link href="https://patojad.com.ar/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Red Hat: ¿Héroe o Villano del Software Libre? La Polémica de la Comercialización de Linux</title><link>https://patojad.com.ar/post/2025/10/red-hat-h%C3%A9roe-o-villano-del-software-libre-la-pol%C3%A9mica-de-la-comercializaci%C3%B3n-de-linux/</link><pubDate>Wed, 22 Oct 2025 08:02:00 +0000</pubDate><guid>https://patojad.com.ar/post/2025/10/red-hat-h%C3%A9roe-o-villano-del-software-libre-la-pol%C3%A9mica-de-la-comercializaci%C3%B3n-de-linux/</guid><description>&lt;p&gt;¡Hola a todos, apasionados del software libre! 👋 Linux es el sistema operativo de código abierto más grande del mundo, pero su éxito en el mundo empresarial no sería posible sin un actor clave: Red Hat.&lt;/p&gt;
&lt;p&gt;Red Hat, hoy propiedad de IBM, es el motor comercial detrás de gran parte del ecosistema. Pero su influencia no está exenta de controversia. ¿Es Red Hat el héroe que financia el futuro de Linux, o el villano que amenaza los principios del software libre?&lt;/p&gt;
&lt;p&gt;En este artículo, que acompaña a nuestro video &lt;strong&gt;&amp;ldquo;Linux Profundo: ¿Red Hat Ayuda o Perjudica a Linux?&amp;rdquo;&lt;/strong&gt;, analizamos las dos caras de la moneda.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="la-postura-del-héroe-por-qué-red-hat-impulsa-a-linux"&gt;
La Postura del &amp;ldquo;Héroe&amp;rdquo;: Por Qué Red Hat Impulsa a Linux
&lt;a href="#la-postura-del-h%c3%a9roe-por-qu%c3%a9-red-hat-impulsa-a-linux" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Los defensores de Red Hat argumentan que es la fuerza más importante para el desarrollo y la legitimidad de Linux en el sector corporativo.&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="mayor-contribuyente-al-kernel"&gt;
Mayor Contribuyente al Kernel
&lt;a href="#mayor-contribuyente-al-kernel" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Red Hat es consistentemente uno de los mayores contribuyentes al kernel de Linux, solo superado por la propia Linus Torvalds. Sin el financiamiento y el trabajo de sus ingenieros, el desarrollo de Linux sería mucho más lento.&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="estandarización-y-solidez-empresarial"&gt;
Estandarización y Solidez Empresarial
&lt;a href="#estandarizaci%c3%b3n-y-solidez-empresarial" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Las grandes corporaciones (bancos, gobiernos, telecoms) no pueden depender de un software sin soporte. Red Hat proporciona:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Soporte a Largo Plazo (LTS):&lt;/strong&gt; Con Red Hat Enterprise Linux (RHEL), las empresas tienen garantizado un soporte de seguridad y mantenimiento durante años, algo vital.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Innovación en Tecnología Abierta:&lt;/strong&gt; Red Hat es el impulsor de proyectos clave como Fedora, CentOS Stream, Podman (alternativa a Docker) y gran parte del ecosistema de Kubernetes (OpenShift).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="el-modelo-de-negocio-suscripción-al-soporte"&gt;
El Modelo de Negocio &amp;ldquo;Suscripción al Soporte&amp;rdquo;
&lt;a href="#el-modelo-de-negocio-suscripci%c3%b3n-al-soporte" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Red Hat no vende software; vende servicio, certificación y soporte. Esto valida el modelo de negocio de código abierto: el software es libre, pero el soporte profesional y la garantía de estabilidad se pagan. Esto demuestra que el software libre puede ser rentable.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="la-postura-del-villano-por-qué-red-hat-genera-desconfianza"&gt;
La Postura del &amp;ldquo;Villano&amp;rdquo;: Por Qué Red Hat Genera Desconfianza
&lt;a href="#la-postura-del-villano-por-qu%c3%a9-red-hat-genera-desconfianza" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;La comunidad más purista del software libre a menudo ve con recelo la influencia de una gran corporación con fines de lucro sobre un proyecto comunitario.&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="la-polémica-de-centos-stream"&gt;
La Polémica de CentOS Stream
&lt;a href="#la-pol%c3%a9mica-de-centos-stream" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;La mayor controversia reciente fue la decisión de Red Hat de discontinuar CentOS Linux (una reconstrucción 1:1 de RHEL) a favor de CentOS Stream.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;El Problema:&lt;/strong&gt; CentOS era usado por muchos como una alternativa gratuita y estable a RHEL en producción. Al pasar a Stream, CentOS se convirtió en la &amp;ldquo;rama de prueba&amp;rdquo; (lo que va antes de RHEL), eliminando la versión gratuita estable que la comunidad usaba.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;La Reacción:&lt;/strong&gt; Esto generó una fractura y el nacimiento de forks (bifurcaciones) de CentOS como AlmaLinux y Rocky Linux, con el objetivo de restaurar el clon gratuito y estable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="concentración-de-poder-y-código"&gt;
Concentración de Poder y Código
&lt;a href="#concentraci%c3%b3n-de-poder-y-c%c3%b3digo" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Al ser el actor dominante, existe el temor a la centralización. Si Red Hat/IBM toma una decisión de diseño que beneficia a su modelo de negocio, pero no a la comunidad, esta tiene un impacto desproporcionado en el ecosistema. Esto va en contra del espíritu descentralizado y de la libertad del software.&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="el-costo-para-las-pymes"&gt;
El Costo para las PYMES
&lt;a href="#el-costo-para-las-pymes" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Aunque RHEL es esencial para grandes empresas, su costo de suscripción puede ser prohibitivo para pequeñas empresas o startups, forzándolas a buscar alternativas sin soporte profesional.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="conclusión-la-tensión-beneficiosa"&gt;
Conclusión: La Tensión Beneficiosa
&lt;a href="#conclusi%c3%b3n-la-tensi%c3%b3n-beneficiosa" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;La realidad es que el desarrollo de Linux es una tensión constante entre la comunidad y las corporaciones.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sin la comunidad&lt;/strong&gt;, Linux no tendría el alma ni la diversidad de código abierto.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sin corporaciones como Red Hat&lt;/strong&gt;, Linux no sería el pilar sólido y financiado que es en el sector empresarial.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Red Hat no es un villano, sino un agente de comercialización indispensable. Su existencia asegura que el kernel avance a pasos agigantados, aunque la comunidad deba estar siempre atenta para garantizar que las bases del código sigan siendo libres y accesibles para todos (como demostraron los proyectos &lt;a href="https://patojad.com.ar/post/2025/03/almalinux-gu%c3%ada-definitiva-historia-ventajas-y-comparativa-vs-rhelcentos/" class="text-amber-500 hover:text-amber-600 dark:text-amber-500 dark:hover:text-amber-600 font-semibold"&gt;
&lt;i class="fas fa-link"&gt;&lt;/i&gt;&amp;nbsp;
AlmaLinux
&lt;/a&gt; y Rocky).&lt;/p&gt;</description></item><item><title>Introducción a la Arquitectura de Software: La Guía Esencial para Programadores</title><link>https://patojad.com.ar/post/2025/09/introducci%C3%B3n-a-la-arquitectura-de-software-la-gu%C3%ADa-esencial-para-programadores/</link><pubDate>Mon, 08 Sep 2025 09:32:00 +0000</pubDate><guid>https://patojad.com.ar/post/2025/09/introducci%C3%B3n-a-la-arquitectura-de-software-la-gu%C3%ADa-esencial-para-programadores/</guid><description>&lt;p&gt;¡Hola a todos, futuros arquitectos de software! 👋 Si ya dominas la programación y te sientes cómodo escribiendo código, es momento de subir al siguiente nivel. El siguiente paso en la evolución de un programador es empezar a pensar en el &amp;ldquo;panorama general&amp;rdquo; del software, y ahí es donde entra en juego la &lt;strong&gt;Arquitectura de Software&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Este artículo es el complemento perfecto de nuestro video &lt;strong&gt;&amp;ldquo;Qué es la ARQUITECTURA de Software: Guía COMPLETA para Programadores (¡Y por qué deberías aprenderla!)&amp;rdquo;&lt;/strong&gt;. Aquí profundizaremos en este rol crucial, sus principios fundamentales y te daré un mini-roadmap para empezar a pensar como un arquitecto.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="qué-es-la-arquitectura-de-software-la-analogía-de-la-casa"&gt;
¿Qué es la Arquitectura de Software? La Analogía de la Casa
&lt;a href="#qu%c3%a9-es-la-arquitectura-de-software-la-analog%c3%ada-de-la-casa" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Imagina que quieres construir una casa.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un &lt;strong&gt;programador&lt;/strong&gt; es como un constructor especializado: es un experto en colocar ladrillos, instalar la electricidad o el sistema de cañerías. Su enfoque es la implementación perfecta de una parte del proyecto.&lt;/li&gt;
&lt;li&gt;Un &lt;strong&gt;Arquitecto de Software&lt;/strong&gt; es el arquitecto del edificio. Su trabajo es diseñar los planos generales, decidir la estructura, la cantidad de pisos, los cimientos, dónde irán los soportes principales y cómo se integrarán todos los sistemas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La &lt;strong&gt;Arquitectura de Software&lt;/strong&gt; es el conjunto de decisiones estructurales que definen un sistema, incluyendo sus componentes, sus relaciones, y las reglas que gobiernan su diseño y evolución. Es la &lt;strong&gt;columna vertebral&lt;/strong&gt; de cualquier proyecto, y una buena arquitectura es la diferencia entre un software que prospera y uno que se vuelve un desastre.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="programador-vs-arquitecto-de-software-roles-y-responsabilidades"&gt;
Programador vs. Arquitecto de Software: Roles y Responsabilidades
&lt;a href="#programador-vs-arquitecto-de-software-roles-y-responsabilidades" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Aunque ambos roles son fundamentales para el desarrollo, sus responsabilidades son distintas:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Rol&lt;/th&gt;
&lt;th&gt;Enfoque Principal&lt;/th&gt;
&lt;th&gt;Pregunta Clave&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Programador&lt;/td&gt;
&lt;td&gt;Implementación, código, algoritmos.&lt;/td&gt;
&lt;td&gt;&amp;ldquo;¿Cómo resuelvo este problema específico con código?&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Arquitecto&lt;/td&gt;
&lt;td&gt;Estructura, diseño, patrones, escalabilidad.&lt;/td&gt;
&lt;td&gt;&amp;ldquo;¿Por qué y cómo este diseño permitirá que el sistema crezca y se mantenga?&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;El programador se enfoca en la calidad del código a nivel de función o componente, mientras que el arquitecto se preocupa por la calidad a nivel de todo el sistema. Un arquitecto debe tener una sólida base de programación, pero también una visión a largo plazo para prever problemas futuros.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="principios-fundamentales-de-la-arquitectura-de-software"&gt;
Principios Fundamentales de la Arquitectura de Software
&lt;a href="#principios-fundamentales-de-la-arquitectura-de-software" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Un buen diseño arquitectónico no es solo un conjunto de decisiones técnicas; debe cumplir con ciertas &amp;ldquo;cualidades&amp;rdquo; clave para que el software sea robusto. Estos son los principios más importantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Escalabilidad:&lt;/strong&gt; La capacidad del sistema de manejar un crecimiento de usuarios, transacciones o datos sin comprometer el rendimiento.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mantenibilidad:&lt;/strong&gt; La facilidad con la que el software puede ser entendido, modificado y depurado por el equipo de desarrollo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fiabilidad:&lt;/strong&gt; La capacidad del sistema para funcionar de forma consistente y sin fallos, incluso bajo condiciones adversas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Seguridad:&lt;/strong&gt; La protección del sistema contra amenazas, vulnerabilidades y accesos no autorizados.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rendimiento:&lt;/strong&gt; La rapidez y eficiencia con la que el sistema procesa las tareas y usa los recursos computacionales.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="patrones-arquitectónicos-monolítico-vs-microservicios"&gt;
Patrones Arquitectónicos: Monolítico vs. Microservicios
&lt;a href="#patrones-arquitect%c3%b3nicos-monol%c3%adtico-vs-microservicios" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Estos son dos de los patrones más comunes y opuestos que un arquitecto debe entender:&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="arquitectura-monolítica"&gt;
Arquitectura Monolítica
&lt;a href="#arquitectura-monol%c3%adtica" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;En este modelo, todo el software (la interfaz de usuario, la lógica de negocio, el acceso a datos) se empaqueta en una única y gran aplicación.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ventajas:&lt;/strong&gt; Fácil de empezar a desarrollar y de desplegar. Todo está en un solo lugar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Desventajas:&lt;/strong&gt; A medida que el proyecto crece, se vuelve muy complejo, difícil de escalar (tienes que escalar todo el sistema, incluso si solo una parte necesita más potencia) y un fallo en un componente puede tumbar toda la aplicación.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="arquitectura-de-microservicios"&gt;
Arquitectura de Microservicios
&lt;a href="#arquitectura-de-microservicios" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;En este modelo, el sistema se divide en pequeños servicios independientes, cada uno con una función específica, que se comunican entre sí.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ventajas:&lt;/strong&gt; Cada servicio se puede desarrollar, desplegar y escalar de forma independiente. Si un servicio falla, los demás pueden seguir funcionando. Los equipos pueden trabajar en paralelo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Desventajas:&lt;/strong&gt; Mucho más complejo de gestionar. Requiere una buena coordinación y sistemas para la comunicación entre servicios.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="el-camino-para-convertirte-en-un-arquitecto-de-software"&gt;
El Camino para Convertirte en un Arquitecto de Software
&lt;a href="#el-camino-para-convertirte-en-un-arquitecto-de-software" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Si este rol te parece atractivo, aquí tienes un mini-roadmap para empezar a desarrollar una mentalidad de arquitecto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Domina la Programación:&lt;/strong&gt; No puedes diseñar si no entiendes los cimientos. Sé un experto en tu lenguaje principal y domina los principios SOLID.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aprende Patrones de Diseño:&lt;/strong&gt; Estudiá los patrones de diseño de software (los del &amp;ldquo;Gang of Four&amp;rdquo; son un buen punto de partida). Estos son las soluciones probadas a problemas comunes de diseño.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Entiende los Sistemas Distribuidos:&lt;/strong&gt; Familiarízate con la arquitectura cliente-servidor, las API REST, los conceptos de microservicios y las herramientas como Docker y Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Desarrolla Habilidades Blandas:&lt;/strong&gt; Un arquitecto no solo codifica. Debe ser un líder, un comunicador y un solucionador de problemas. Aprende a explicar decisiones técnicas de manera clara a otros miembros del equipo y a stakeholders no técnicos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="conclusión-el-rol-crucial-para-el-futuro-del-software"&gt;
Conclusión: El Rol Crucial para el Futuro del Software
&lt;a href="#conclusi%c3%b3n-el-rol-crucial-para-el-futuro-del-software" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;La arquitectura de software es el arte de planificar y diseñar sistemas robustos y escalables. Es un paso natural en la carrera de cualquier programador que aspire a crecer y a tener un impacto significativo en proyectos a gran escala.&lt;/p&gt;
&lt;p&gt;Esperamos que este video y artículo te inspiren a ir más allá del código y a empezar a pensar en el diseño global. Si te ha gustado, no olvides darle Me Gusta, suscribirte al canal de PatoJAD y compartir este contenido.&lt;/p&gt;
&lt;p&gt;¡Déjanos un comentario con tus dudas o si te interesa que hablemos de algún patrón arquitectónico en particular!&lt;/p&gt;</description></item><item><title>Cómo instalar Docker en Ubuntu 22.04</title><link>https://patojad.com.ar/post/2024/12/c%C3%B3mo-instalar-docker-en-ubuntu-22.04/</link><pubDate>Mon, 23 Dec 2024 19:18:00 +0000</pubDate><guid>https://patojad.com.ar/post/2024/12/c%C3%B3mo-instalar-docker-en-ubuntu-22.04/</guid><description>&lt;p&gt;A continuacion dejo los pasos que seguimos en el video para instalar Docker en Ubuntu 22.04. El mismo procedimiento puede ser aplicado a otras versiones de Ubuntu y distribuciones basadas en Ubuntu.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="paso-1-actualizar-el-sistema"&gt;
Paso 1: Actualizar el sistema
&lt;a href="#paso-1-actualizar-el-sistema" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Antes de instalar Docker, es recomendable actualizar el sistema para asegurarse de que todos los paquetes estén al día. Para ello, ejecuta los siguientes comandos en la terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 class="text-amber-500 text-3xl my-6" id="paso-2-preparar-entorno"&gt;
Paso 2: Preparar entorno
&lt;a href="#paso-2-preparar-entorno" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Docker requiere algunas dependencias para funcionar correctamente. Puedes instalarlas ejecutando el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Add Docker&amp;#39;s official GPG key:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt install ca-certificates curl
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo install -m &lt;span class="m"&gt;0755&lt;/span&gt; -d /etc/apt/keyrings
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo chmod a+r /etc/apt/keyrings/docker.asc
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Add the repository to Apt sources:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;deb [arch=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dpkg --print-architecture&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;. /etc/os-release &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$VERSION_CODENAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; stable&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 class="text-amber-500 text-3xl my-6" id="paso-3-instalar-docker"&gt;
Paso 3: Instalar Docker
&lt;a href="#paso-3-instalar-docker" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Una vez que hayas configurado el entorno, puedes instalar Docker en Ubuntu 22.04 con el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 class="text-amber-500 text-3xl my-6" id="paso-4-verificar-la-instalación"&gt;
Paso 4: Verificar la instalación
&lt;a href="#paso-4-verificar-la-instalaci%c3%b3n" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Para verificar que Docker se haya instalado correctamente, puedes ejecutar el siguiente comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;docker --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item></channel></rss>