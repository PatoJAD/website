<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on PatoJAD | Pasion por la Tecnologia</title><link>https://patojad.com.ar/tags/dev/</link><description>Recent content in Dev on PatoJAD | Pasion por la Tecnologia</description><generator>Hugo -- gohugo.io</generator><language>es-AR</language><lastBuildDate>Tue, 03 May 2022 13:18:00 +0000</lastBuildDate><atom:link href="https://patojad.com.ar/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>¿La mejor distro para la gente de sistemas?</title><link>https://patojad.com.ar/post/2022/05/la-mejor-distro-para-la-gente-de-sistemas/</link><pubDate>Tue, 03 May 2022 13:18:00 +0000</pubDate><guid>https://patojad.com.ar/post/2022/05/la-mejor-distro-para-la-gente-de-sistemas/</guid><description>&lt;p&gt;Esta es una pregunta que me hicieron muchas veces compañeros de la facultad apoyándose en mi “fanatismo” sobre linux. Sin embargo siempre fui dando respuestas diferentes dependiendo del estadio de mi vida en el que estaba. Sin embargo, después de mucho camino transitado forme un pensamiento más centrado en la experiencia.&lt;/p&gt;
&lt;iframe src='https://www.youtube.com/embed/tEWDS29KvBM?rel=0' title="Video de Youtube"
class="w-full h-auto rounded-xl aspect-video mb-3" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;¿Vos qué pensas? Si estás en sistemas ¿Que distro usas?¿Por qué?&lt;/p&gt;</description></item><item><title>¿El mejor sistema para programar?</title><link>https://patojad.com.ar/post/2022/02/el-mejor-sistema-para-programar/</link><pubDate>Fri, 11 Feb 2022 11:56:00 +0000</pubDate><guid>https://patojad.com.ar/post/2022/02/el-mejor-sistema-para-programar/</guid><description>&lt;p&gt;En esta oportunidad vamos a hablar sobre esta pregunta que me han hecho muchas veces. Si bien soy un usuario recurrente de GNU/Linux voy a ser lo más imparcial. De todas formas queda sobreentendido que es mi opinión en base a mi experiencia. Pero como aclaró durante todo el video donde doy mi opinión &lt;strong&gt;SE PUEDE PROGRAMAR EN CUALQUIER SISTEMA OPERATIVO&lt;/strong&gt;&lt;/p&gt;
&lt;iframe src='https://www.youtube.com/embed/JVytOtBPKDI?rel=0' title="Video de Youtube"
class="w-full h-auto rounded-xl aspect-video mb-3" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;Recorda apoyarnos en nuestras redes para poder seguir adelante con todo lo que implica PatoJAD es un proyecto que poco a poco crece e intenta estar al lado de todos de los usuarios dándoles dia a dia herramientas o funcionalidades. Mostranos tu apoyo con pequeños gestos, desactivando el bloqueador de anuncios, apoyándonos en las redes sociales, donando o compartiendo el contenido, esto solo es posible gracias a cada lector y cada persona como vos.&lt;/p&gt;</description></item><item><title>Redirección algunos usos</title><link>https://patojad.com.ar/post/2020/10/redirecci%C3%B3n-algunos-usos/</link><pubDate>Thu, 29 Oct 2020 09:04:00 +0000</pubDate><guid>https://patojad.com.ar/post/2020/10/redirecci%C3%B3n-algunos-usos/</guid><description>&lt;p&gt;Seguimos con el tema de la terminal y las salidas de las mismas. Te recomiendo personalmente leer la publicación anterior para poder aprovechar al máximo esta información.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="eliminando-salidas-innecesarias"&gt;
Eliminando salidas innecesarias
&lt;a href="#eliminando-salidas-innecesarias" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Algunas veces “el silencio es oro”, y no queremos la salida de un comando, sólo queremos ignorarla. Esto se aplica particularmente a los mensajes de estado y de error. El sistema proporciona una forma de hacerlo redireccionando la salida a un archivo especial llamado “dev/null” (del cual hablamos anteriormente). Este archivo es un dispositivo del sistema llamado un cubo de bits (bit bucket) que acepta entradas y no hace nada con ellas. Para suprimir los mensajes de error de un comando, hacemos esto:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ls -l /bin/usr 2&amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="devnull-en-la-cultura-unix"&gt;
/dev/null en la cultura Unix
&lt;a href="#devnull-en-la-cultura-unix" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;El cubo de bits es un antiguo concepto de Unix y, debido a su universalidad, ha aparecido en muchas partes de la cultura Unix. Cuando alguien dice que está enviando tus comentarios a /dev/null, ahora ya sabes lo que significa.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="redireccionando-la-entrada-estándar"&gt;
Redireccionando la entrada estándar
&lt;a href="#redireccionando-la-entrada-est%c3%a1ndar" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Hasta ahora, no hemos encontrado ningún comando que haga uso de la entrada estándar en la saga de publicaciones sobre la terminal (en realidad sí lo hemos hecho, pero revelaremos la sorpresa un poco más adelante), así que necesitamos presentar uno.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="cat--concatenando-archivos"&gt;
cat – Concatenando archivos
&lt;a href="#cat--concatenando-archivos" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;El comando cat lee uno o más archivos y los copia a la salida estándar de la siguiente forma:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat [archivo...]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En la mayoría de los casos, puedes usarlo para mostrar archivos sin paginar, por ejemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat ls-output.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mostrará el contenido del archivo ls-output.txt. cat a menudo se usa para mostrar archivos de texto cortos. Como cat puede aceptar más de un archivo como argumento, también se puede usar para unir archivos. Imagina que hemos descargado un gran archivo que ha sido dividido en múltiples partes (los archivos multimedia a menudo están divididos de esta forma en Usenet), y queremos unirlos de nuevo. Si los archivos se llamarán:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;movie.mpeg.001 movie.mpeg.002 ... movie.mpeg.099
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;podríamos unirlos de nuevo con este comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat movie.mpeg.0* &amp;gt; movie.mpeg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como los comodines siempre expanden sus resultados en orden, los argumentos se distribuirán en el orden correcto.&lt;/p&gt;
&lt;p&gt;Todo esto está muy bien, pero ¿qué tiene esto que ver con la entrada estándar? Nada todavía, pero probamos algo más. Qué pasa si usamos “cat” sin argumentos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No ocurre nada, sólo se queda quieto como si se hubiera quedado colgado. Podría parecer eso, pero realmente está haciendo lo que se supone que debe hacer.&lt;/p&gt;
&lt;p&gt;Si no le damos argumentos a cat, lee de la entrada estándar y como la entrada estándar está, por defecto, asignada al teclado, ¡está esperando a que tecleemos algo! Prueba a añadir el siguiente texto y pulsa Enter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat
PatoJAD mi blog favorito https://patojad.com.ar/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora, pulsa Ctrl-d (es decir, mantén pulsada la tecla Ctrl y luego pulsa “d”) para decirle a cat que ha alcanzado el final del archivo (EOF – end of file) en la entrada estándar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat
PatoJAD mi blog favorito https://patojad.com.ar/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Obteniendo una salida similar a:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PatoJAD mi blog favorito https://patojad.com.ar/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En ausencia de nombres de archivo como argumentos, cat copia la entrada estándar a la salida estándar, así que vemos nuestra línea de texto repetida. Podemos usar este comportamiento para crear archivos de texto cortos. Digamos que queremos crear un archivo llamado “lazy_dog.txt” conteniendo el texto de nuestro ejemplo. Podríamos hacer esto:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat &amp;gt; lazy_dog.txt
PatoJAD mi blog favorito https://patojad.com.ar/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Escribe el comando seguido del texto que queremos colocar en el archivo. Recuerda pulsar Ctrl-d al final. Usando la línea de comandos, ¡hemos implementado el procesador de texto más tonto del mundo! Para ver nuestros resultados, podemos usar cat para copiar de nuevo el archivo a stdout:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat lazy_dog.txt
PatoJAD mi blog favorito https://patojad.com.ar/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora que sabemos cómo cat acepta la entrada estándar, además de nombres de archivo como argumentos, probemos redirigiendo la entrada estándar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat &amp;lt; lazy_dog.txt
PatoJAD mi blog favorito https://patojad.com.ar/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usando el operador de redirección “&amp;lt;”, hemos cambiado el origen de la entrada estándar del teclado al archivo lazy_dog.txt. Vemos que el resultado es el mismo que pasarle un nombre de archivo como argumento. Esto no es particularmente útil en comparación con pasar un nombre de archivo como argumento, pero sirve para demostrar el uso de un archivo como fuente de la entrada estándar. Otros comandos hacen un mejor uso de la entrada estándar, como veremos pronto.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="tuberías-pipelines"&gt;
Tuberías (Pipelines)
&lt;a href="#tuber%c3%adas-pipelines" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;La capacidad de los comandos de leer datos de la entrada estándar y mandarlos a la salida estándar la utiliza una característica del shell llamada tubería (pipeline). Usando el operador tubería “|” (la barra vertical), la salida estándar de un comando puede ser entubada o canalizada hacia la entrada estándar de otro:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;comando1 | comando2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para demostrarlo plenamente, vamos a necesitar algunos comandos. ¿Recuerdas que dijimos que había uno que ya conocíamos que acepta entrada estándar? Es less. Podemos usar less para mostrar, página a página, la salida de cualquier comando que mande sus resultados a la salida estándar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ls -l /usr/bin | less
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;¡Esto es extremadamente útil! Usando esta técnica, podemos examinar convenientemente la salida de cualquier comando que produzca salida estándar.&lt;/p&gt;</description></item><item><title>Comandos que no tenes que probar</title><link>https://patojad.com.ar/post/2020/09/comandos-que-no-tenes-que-probar/</link><pubDate>Mon, 28 Sep 2020 09:02:00 +0000</pubDate><guid>https://patojad.com.ar/post/2020/09/comandos-que-no-tenes-que-probar/</guid><description>&lt;p&gt;Navegando por la web, me encontre unas imagenes que creo que todo el user de linux querría ver, habla un poco de esos comandos que no deberíamos utilizar para jugar aunque suene tentador porque simplemente &lt;strong&gt;Quieren ver el mundo arder&lt;/strong&gt;&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="eliminar-todo-de-forma-recursiva"&gt;
Eliminar todo de forma recursiva
&lt;a href="#eliminar-todo-de-forma-recursiva" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;&lt;div class="flex flex-wrap justify-center"&gt;
&lt;img src="https://i.postimg.cc/d0SP9yy7/image.png" alt="" title="" loading="lazy" decoding="async" class="rounded-xl" /&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Este es probablemente el comando más popular en el ámbito de los &lt;em&gt;trolls&lt;/em&gt; de linux y si bien es popular nunca esta de mas entender bien cómo funciona y obviamente evitar el uso y la distribución de lo mismo. Este comando es el tan conocido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo rm -rf /
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Si bien todos entendemos las consecuencias de este comando que es la pérdida total de los archivos de nuestro sistemas (desde la carpeta raíz) la explicación &lt;em&gt;funcional&lt;/em&gt; dada por el usuario que creó estas imágenes es:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Con &lt;code&gt;rm -rf&lt;/code&gt; borramos todos los directorios y ficheros de manera recursiva. Añadiendo el parámetro &lt;code&gt;/&lt;/code&gt; le decimos que lo haga desde la raíz, por lo que eliminará todo lo que se encuentre por el camino.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="bomba-fork"&gt;
Bomba Fork
&lt;a href="#bomba-fork" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;&lt;div class="flex flex-wrap justify-center"&gt;
&lt;img src="https://i.postimg.cc/tJQcrtCg/image.png" alt="" title="" loading="lazy" decoding="async" class="rounded-xl" /&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;La sintaxis de este comando es algo realmente raro, y al fin de cuenta no es tan dañino este comando, si bien tilda la PC basta con un reinicio para poder seguir, sin embargo existen muchas formas de volverlo muy dañino, pero si estás tentado en probar alguno de la lista te diria que pruebes este aunque sea bajo tu propio riesgo. El comando &lt;em&gt;raro&lt;/em&gt; es:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;:&lt;span class="o"&gt;(){&lt;/span&gt; :&lt;span class="p"&gt;|&lt;/span&gt;: &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Y según el colega que realizó las imágenes podemos describir su función de la siguiente forma:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un comando un poco raro, ¿no? Este comando causa una muy posible caída del sistema al consumir todos los recursos disponibles de tu ordenador, ya que este proceso es generar otro proceso que se ejecute simultáneamente. Muchos procesos procesos que causan una denegación de servicio, lo más probable es que haga que tengas que reiniciar el sistema.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="mover-todo-a-la-nada"&gt;
Mover todo a la nada
&lt;a href="#mover-todo-a-la-nada" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;&lt;div class="flex flex-wrap justify-center"&gt;
&lt;img src="https://i.postimg.cc/7ZYWQLDS/image.png" alt="" title="" loading="lazy" decoding="async" class="rounded-xl" /&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Este comando es el punto intermedio entre los dos anteriores. Es más dañino que la &lt;strong&gt;Bomba Fork&lt;/strong&gt; por lo cual no recomiendo probarlo. Este comando es muy similar a uno que suele estar en los scripts para evitar borrar las cosas las mueven a este directorio. El comando en sí que debemos evitar es:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mv ~ /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Y nuestro colega define el funcionamiento de este comando de la siguiente forma:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Con este comando, movemos todo el contenido de nuestra carpeta home (~) a la carpeta &lt;code&gt;/dev/null&lt;/code&gt;. Claramente no existe ninguna carpeta llamada así, por lo que perderemos todos nuestros documentos, imágenes, etc. Un lío que no nos conviene.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Desde ya quiero agradecer a &lt;strong&gt;@nilo_tech&lt;/strong&gt; por realizar esto que realizo y no se olviden de pasarse por sus redes sociales para agradecerles personalmente.&lt;/p&gt;</description></item></channel></rss>