<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Node.js on PatoJAD | Pasion por la Tecnologia</title><link>https://patojad.com.ar/tags/node.js/</link><description>Recent content in Node.js on PatoJAD | Pasion por la Tecnologia</description><generator>Hugo -- gohugo.io</generator><language>es-AR</language><lastBuildDate>Thu, 20 Feb 2025 10:32:00 +0000</lastBuildDate><atom:link href="https://patojad.com.ar/tags/node.js/index.xml" rel="self" type="application/rss+xml"/><item><title>Bun vs Node.js: ¿Cuál Es Mejor Para Backend en 2025? 🤔</title><link>https://patojad.com.ar/post/2025/02/bun-vs-node.js-cu%C3%A1l-es-mejor-para-backend-en-2025/</link><pubDate>Thu, 20 Feb 2025 10:32:00 +0000</pubDate><guid>https://patojad.com.ar/post/2025/02/bun-vs-node.js-cu%C3%A1l-es-mejor-para-backend-en-2025/</guid><description>&lt;p&gt;¿Estás buscando el mejor entorno de ejecución para tu backend en &lt;strong&gt;JavaScript&lt;/strong&gt;? En este artículo, comparo &lt;strong&gt;Bun&lt;/strong&gt; y &lt;strong&gt;Node.js&lt;/strong&gt; , dos de las opciones más populares para desarrollo backend en 2025. Analizamos rendimiento, compatibilidad y facilidad de uso, además de crear un servidor básico con ambos. ¡Descubre cuál es la mejor opción para tus proyectos!&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="qué-son-bun-y-nodejs"&gt;
¿Qué son Bun y Node.js?
&lt;a href="#qu%c3%a9-son-bun-y-nodejs" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;h3 class="text-gray-500 text-3xl my-6" id="nodejs"&gt;
Node.js
&lt;a href="#nodejs" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Node.js&lt;/strong&gt; es un entorno de ejecución de &lt;strong&gt;JavaScript&lt;/strong&gt; que ha sido la opción estándar durante años. Es ampliamente utilizado, tiene una comunidad masiva y es compatible con casi todas las bibliotecas y frameworks. Su madurez lo convierte en una opción confiable para proyectos de cualquier tamaño.&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="bun"&gt;
Bun
&lt;a href="#bun" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Por otro lado, Bun es un nuevo jugador en el mercado. Promete ser más rápido que &lt;strong&gt;Node.js&lt;/strong&gt; y ofrece características como soporte nativo para &lt;a href="https://patojad.com.ar/post/2023/03/que-es-typescript-en-que-se-parece-a-javascript/" target="_blank" rel="noopener noreferrer" class="text-amber-500 hover:text-amber-600 dark:text-amber-500 dark:hover:text-amber-600 font-semibold"&gt;
&lt;i class="fas fa-link"&gt;&lt;/i&gt;&amp;nbsp;
TypeScript
&lt;/a&gt; y una API simplificada. Además, Bun no solo es un entorno de ejecución, sino también un administrador de paquetes y un bundler.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="comparativa"&gt;
Comparativa
&lt;a href="#comparativa" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;h3 class="text-gray-500 text-3xl my-6" id="rendimiento"&gt;
Rendimiento
&lt;a href="#rendimiento" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Según pruebas recientes, &lt;strong&gt;Bun&lt;/strong&gt; puede ser hasta 3 veces más rápido que Node.js en ciertas tareas, como la inicialización de servidores y la ejecución de scripts. Esto lo hace ideal para aplicaciones que requieren alta velocidad. Sin embargo, &lt;strong&gt;Node.js&lt;/strong&gt; sigue siendo más estable y maduro, con una compatibilidad casi universal.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Característica&lt;/th&gt;
&lt;th&gt;Bun&lt;/th&gt;
&lt;th&gt;Node.js&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Rendimiento&lt;/td&gt;
&lt;td&gt;🚀 Más rápido&lt;/td&gt;
&lt;td&gt;⚡️ Estable y probado&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Compatibilidad&lt;/td&gt;
&lt;td&gt;📈 En crecimiento&lt;/td&gt;
&lt;td&gt;✅ Amplia compatibilidad&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Facilidad de Uso&lt;/td&gt;
&lt;td&gt;🧩 Sintaxis limpia y simplificada&lt;/td&gt;
&lt;td&gt;🛠️ Requiere más configuración&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="compatibilidad-y-facilidad-de-uso"&gt;
Compatibilidad y Facilidad de Uso
&lt;a href="#compatibilidad-y-facilidad-de-uso" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;En términos de compatibilidad, &lt;strong&gt;Node.js&lt;/strong&gt; gana por su madurez. Casi todas las bibliotecas y frameworks funcionan sin problemas. Por otro lado, Bun está creciendo rápidamente, pero aún carece de compatibilidad con algunas herramientas específicas.&lt;/p&gt;
&lt;p&gt;En cuanto a facilidad de uso, &lt;strong&gt;Bun&lt;/strong&gt; tiene una ventaja clara. Su sintaxis es más limpia y simplifica muchas tareas, como la instalación de dependencias y la creación de servidores.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="demostración-práctica-crear-un-servidor-básico"&gt;
Demostración Práctica: Crear un Servidor Básico
&lt;a href="#demostraci%c3%b3n-pr%c3%a1ctica-crear-un-servidor-b%c3%a1sico" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;h3 class="text-gray-500 text-3xl my-6" id="servidor-en-nodejs"&gt;
Servidor en Node.js
&lt;a href="#servidor-en-nodejs" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;span class="lnt"&gt;8
&lt;/span&gt;&lt;span class="lnt"&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-javascript" data-lang="javascript"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hola desde Node.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Servidor corriendo en http://localhost:3000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 class="text-gray-500 text-3xl my-6" id="servidor-en-bun"&gt;
Servidor en Bun
&lt;a href="#servidor-en-bun" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-TypeScript" data-lang="TypeScript"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;Bun&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;port&lt;/span&gt;: &lt;span class="kt"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hola desde Bun&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Como puedes ver, &lt;strong&gt;Bun&lt;/strong&gt; simplifica mucho el proceso.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="conclusión"&gt;
Conclusión
&lt;a href="#conclusi%c3%b3n" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Ambos tienen sus pros y contras. Si buscas rendimiento y simplicidad, &lt;strong&gt;Bun&lt;/strong&gt; es una excelente opción. Pero si necesitas estabilidad y compatibilidad, Node.js sigue siendo una apuesta segura.&lt;/p&gt;
&lt;p&gt;Si te gustó este artículo, no olvides compartirlo en tus redes sociales y seguirme en mis canales para más contenido sobre Linux , programación y desarrollo web.&lt;/p&gt;</description></item><item><title>Bun o Node.js en 2024: ¿Cuál es la mejor opción para desarrollo web?</title><link>https://patojad.com.ar/post/2024/04/bun-o-node.js-en-2024-cu%C3%A1l-es-la-mejor-opci%C3%B3n-para-desarrollo-web/</link><pubDate>Wed, 10 Apr 2024 09:04:00 +0000</pubDate><guid>https://patojad.com.ar/post/2024/04/bun-o-node.js-en-2024-cu%C3%A1l-es-la-mejor-opci%C3%B3n-para-desarrollo-web/</guid><description>&lt;p&gt;Cuando se trata de desarrollo web, ¡Hay tantas herramientas! Pero la opción más popular y ampliamente utilizada es &lt;strong&gt;Node.js&lt;/strong&gt;. Sin embargo, &lt;strong&gt;Bun&lt;/strong&gt;, una nueva herramienta, también trae muchos beneficios.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="deberías-cambiar-de-nodejs-a-bun-en-2024"&gt;
¿Deberías cambiar de Node.js a Bun en 2024?
&lt;a href="#deber%c3%adas-cambiar-de-nodejs-a-bun-en-2024" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Hoy estamos aquí para analizar las diferencias clave y ayudarnos a decidir cuál podría ser la mejor opción para este 2024. Así que, ¡toma una taza de café ☕️, pon tu lista de reproducción de codificación favorita y vamos a darle!&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="comprendiendo-bun-el-novato-en-el-barrio"&gt;
Comprendiendo Bun: El Novato en el Barrio
&lt;a href="#comprendiendo-bun-el-novato-en-el-barrio" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Imagina a &lt;strong&gt;Bun&lt;/strong&gt; como tu fiel compañero, siempre listo para simplificar tus aventuras de desarrollo web. Este moderno y liviano entorno de ejecución es un nuevo entorno de ejecución de &lt;strong&gt;JavaScript&lt;/strong&gt; completamente escrito en el lenguaje de programación &lt;strong&gt;Zig&lt;/strong&gt;, como una brisa fresca en un día caluroso de verano: refrescante y eficiente. &lt;strong&gt;Bun&lt;/strong&gt; está diseñado para ser un reemplazo directo de &lt;strong&gt;Node.js&lt;/strong&gt; y soporta la mayoría de las mismas API y características. Con &lt;strong&gt;Bun&lt;/strong&gt;, construir aplicaciones web se vuelve muy fácil gracias a su sintaxis intuitiva y características simplificadas.&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="explorando-nodejs-el-guerrero-veterano"&gt;
Explorando Node.js: El Guerrero Veterano
&lt;a href="#explorando-nodejs-el-guerrero-veterano" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Ahora, imagina a &lt;strong&gt;Node.js&lt;/strong&gt; como el guerrero veterano del reino del desarrollo web, probado en batalla y confiable. Este entorno de ejecución es tu elección para aplicaciones escalables y de alto rendimiento. Su modelo de I/O no bloqueante y basado en eventos es como tener un superpoder para manejar múltiples tareas simultáneamente. Esto lo hace adecuado para manejar conexiones concurrentes y procesar grandes volúmenes de datos. Con su vasto ecosistema de módulos y bibliotecas, &lt;strong&gt;Node.js&lt;/strong&gt; capacita a los desarrolladores para crear una amplia gama de aplicaciones, desde servidores web hasta dispositivos IoT.&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="comparación-de-características-bun-vs-nodejs"&gt;
Comparación de características: Bun vs. Node.js
&lt;a href="#comparaci%c3%b3n-de-caracter%c3%adsticas-bun-vs-nodejs" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rendimiento:&lt;/strong&gt; Node.js brilla en el manejo de miles de conexiones con facilidad, como un superhéroe manejando una ciudad bulliciosa. Por otro lado, Bun, aunque más nuevo, se defiende bien y es perfecto para cargas de trabajo moderadas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Facilidad de uso:&lt;/strong&gt; Bun es tu guía amigable del barrio, haciendo del desarrollo web un paseo alegre con su simplicidad. Mientras tanto, Node.js ofrece una inmersión más profunda en el mundo de la programación asincrónica, como dominar un rompecabezas complejo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escalabilidad:&lt;/strong&gt; Tanto Bun como Node.js son tus compañeros confiables para escalar aplicaciones. Node.js destaca en el manejo de conexiones concurrentes, mientras que Bun hereda esta fortaleza y se adapta a varios entornos sin problemas.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="escenarios-del-mundo-real-dónde-brillan"&gt;
Escenarios del Mundo Real: ¿Dónde Brillan?
&lt;a href="#escenarios-del-mundo-real-d%c3%b3nde-brillan" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bun:&lt;/strong&gt; Ideal para startups y equipos pequeños, Bun es tu compañero ágil para construir aplicaciones web y APIs livianas. Es como tener una varita mágica para prototipos rápidos sin comprometer el rendimiento.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node.js:&lt;/strong&gt; Ampliamente utilizado en diversas industrias, Node.js es tu aliado versátil para aplicaciones diversas, desde servidores web hasta dispositivos IoT. Su capacidad para manejar tareas de I/O lo convierte en el favorito entre las empresas para construir soluciones robustas y de alto rendimiento.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="pensamientos-finales-eligiendo-tu-compañero-de-desarrollo-web"&gt;
Pensamientos Finales: Eligiendo tu Compañero de Desarrollo Web
&lt;a href="#pensamientos-finales-eligiendo-tu-compa%c3%b1ero-de-desarrollo-web" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;En la batalla de &lt;strong&gt;Bun&lt;/strong&gt; vs. &lt;strong&gt;Node.js&lt;/strong&gt;, la elección es tuya según tu búsqueda en el reino del desarrollo web. Ya sea que busques simplicidad y velocidad o potencia y escalabilidad, tanto &lt;strong&gt;Bun&lt;/strong&gt; como &lt;strong&gt;Node.js&lt;/strong&gt; están listos para acompañarte en tus aventuras de desarrollo web.&lt;/p&gt;
&lt;p&gt;Entonces, queridos desarrolladores, ¿qué compañero elegirás para tu próxima aventura de desarrollo web?&lt;/p&gt;</description></item><item><title>¿Por qué Node.js se volvió tan popular para el desarrollo backend?</title><link>https://patojad.com.ar/post/2023/08/por-qu%C3%A9-node.js-se-volvi%C3%B3-tan-popular-para-el-desarrollo-backend/</link><pubDate>Mon, 28 Aug 2023 12:26:00 +0000</pubDate><guid>https://patojad.com.ar/post/2023/08/por-qu%C3%A9-node.js-se-volvi%C3%B3-tan-popular-para-el-desarrollo-backend/</guid><description>&lt;p&gt;En este artículo, exploraremos la perspectiva de un influyente autor de Medium acerca de los motivos detrás de la creciente popularidad de Node.js en el ámbito del desarrollo backend. El propósito de este artículo es presentar una adaptación traducida del artículo original, enriquecida con ajustes y opiniones personales sobre el contenido del autor.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="la-perspectiva-de-p-rehan"&gt;
La perspectiva de P. Rehan
&lt;a href="#la-perspectiva-de-p-rehan" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;En los antiguos tiempos del desarrollo backend, &lt;strong&gt;PHP&lt;/strong&gt; solía ser la herramienta dominante para la creación de proyectos web &lt;em&gt;(incluso con un enfoque más abarcador que en la actualidad)&lt;/em&gt;. Sin embargo, con el paso del tiempo, &lt;strong&gt;PHP&lt;/strong&gt; gradualmente se convirtió en el pariente excéntrico y adelantado en el ámbito del desarrollo web, y en la actualidad, pocos comprenden su razón de existir &lt;em&gt;(aunque sigue siendo valioso en áreas como la sencillez del alojamiento web)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Después, como aquel pariente alternativo que prefiere tomar café con leche, &lt;strong&gt;Ruby&lt;/strong&gt; (junto con Rails) ingresó con todas sus tecnologías sofisticadas y disruptivas &lt;em&gt;(aunque en este caso se pasa por alto el nivel de pureza de objetos que aún no se alcanza en &lt;strong&gt;Node.js&lt;/strong&gt;)&lt;/em&gt;. Todos tenemos a esos parientes, pero preferimos mantener cierta distancia.&lt;/p&gt;
&lt;p&gt;Ni siquiera es necesario mencionar a &lt;strong&gt;Java&lt;/strong&gt;, un vestigio obsoleto en la programación backend que solo recuerdan los usuarios de antiguos teléfonos Nokia. &lt;em&gt;(Dejemos a un lado, por un momento, las ventajas de eficiencia que brinda JAVA más allá de su consumo de recursos)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;div class="flex flex-wrap justify-center"&gt;
&lt;img src="https://i.postimg.cc/gJtjsx80/nodepopular.webp" alt="Node: un lenguaje popular" title="Node: un lenguaje popular" loading="lazy" decoding="async" class="rounded-xl" /&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Pero &lt;em&gt;¿qué hace que Node.js sea el factor determinante en el desarrollo backend?&lt;/em&gt; Recordemos&amp;hellip; Hace algunos años, surgió algo nuevo en el mundo del desarrollo backend. No era una novedad extravagante, pero sí increíblemente eficiente: Node.js.&lt;/p&gt;
&lt;div class="w-full rounded-xl bg-blue-600/75 text-blue-950 p-3 flex flex-row justify-center content-between"&gt;
&lt;span class="fa fa-info fa-5x p-3"&gt;&lt;/span&gt;
&lt;p class="no-margin"&gt;Node.js es un entorno de ejecución de JavaScript multiplataforma y de código abierto que revolucionó el panorama en 2017, año en que se volvió ampliamente utilizado.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;La historia de &lt;strong&gt;Node.js&lt;/strong&gt; comenzó antes de alcanzar las 40,000 estrellas en GitHub. Inicialmente, era uno de esos pequeños entornos de &lt;strong&gt;JavaScript&lt;/strong&gt; que ejecutaban código fuera del navegador web. Sin embargo, resultó que &lt;strong&gt;Node.js&lt;/strong&gt; era justo lo que el mundo del desarrollo backend había estado anhelando durante todos esos años: &lt;em&gt;&amp;ldquo;un entorno innovador y potente capaz de gestionar volúmenes masivos de tráfico&amp;rdquo;&lt;/em&gt;. Las siguientes características han contribuido a su renombre como paradigma en el desarrollo backend:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Su tamaño compacto lo convierte en una herramienta excepcional para el desarrollo de aplicaciones en la nube.&lt;/li&gt;
&lt;li&gt;Su velocidad es prácticamente equiparable a la velocidad de la luz, gracias a su motor &lt;strong&gt;JavaScript&lt;/strong&gt; V8.&lt;/li&gt;
&lt;li&gt;La escalabilidad y capacidad de respuesta en el desarrollo de aplicaciones son sobresalientes.&lt;/li&gt;
&lt;li&gt;Cuenta con una comunidad activa de casi 100000 desarrolladores.&lt;/li&gt;
&lt;li&gt;Dispone de un conjunto inagotable de API y un ecosistema ilimitado que facilita la creación desde simples aplicaciones hasta complejas estructuras de microservicios de nivel avanzado.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="cuál-es-el-componente-secreto"&gt;
¿Cuál es el componente secreto?
&lt;a href="#cu%c3%a1l-es-el-componente-secreto" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;¿Cómo puede un entorno de desarrollo backend gestionar tantas consultas y al mismo tiempo ser sólido y receptivo? ¿Cuál es el ingrediente secreto que corre por sus venas?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Node.js&lt;/strong&gt;, además de utilizar el mismo motor que Google Chrome, opera con un enfoque de E/S &lt;em&gt;(Entrada/Salida)&lt;/em&gt; sin bloqueo y controlado por eventos. Es lo que impulsa aplicaciones en tiempo real como Netflix (servicios de transmisión), Discord bots (chatbots) y 8 Ball Pool (juegos en línea).&lt;/p&gt;
&lt;p&gt;Imagine el modelo de E/S sin bloqueo y controlado por eventos como un superhéroe al que llamó Node-Man. Su habilidad única es manejar múltiples tareas y salvar personas sin sudar.&lt;/p&gt;
&lt;p&gt;Su capacidad proviene del modelo de E/S, que maneja múltiples solicitudes sin esperar a que se complete una antes de pasar a la siguiente.Así es como Node Man supera a Flash y vence al Hombre de Acero.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://pinjarirehan.medium.com/why-node-js-is-the-ultimate-game-changer-for-backend-development-26415839bbe2" target="_blank" rel="noopener noreferrer" class="text-amber-500 hover:text-amber-600 dark:text-amber-500 dark:hover:text-amber-600 font-semibold"&gt;
&lt;i class="fas fa-up-right-from-square"&gt;&lt;/i&gt;&amp;nbsp;
Fuente
&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Genpress: El Worpress en Node</title><link>https://patojad.com.ar/post/2019/12/genpress-el-worpress-en-node/</link><pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate><guid>https://patojad.com.ar/post/2019/12/genpress-el-worpress-en-node/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Actualmente estoy trabajando en una plataforma de código abierto para blogs/sitios de contenido, que es más compatible con el siglo XXI, servicios en la nube, escalado, etc.&lt;/p&gt;
&lt;p style="text-align: right;"&gt;
davidmeirlevy
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;El proyecto se divide en microservicios, y tanto el panel de administración como la interfaz del blog están usando Vue.js (administrador escrito con Vue y blog-front con Nuxt, para SSR).&lt;/p&gt;
&lt;p&gt;No está 100% listo, pero está disponible y puede ser útil en este momento para uso básico, tiene un entorno de desarrollo y scripts de producción, usando pm2. La próxima semana con docker y compose, y pronto también helm chart.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://greenpress.herokuapp.com/" target="_blank" rel="noopener noreferrer" class="text-amber-500 hover:text-amber-600 dark:text-amber-500 dark:hover:text-amber-600 font-semibold"&gt;
&lt;i class="fas fa-up-right-from-square"&gt;&lt;/i&gt;&amp;nbsp;
Demo
&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Estaría más que feliz de obtener cualquier tipo de ayuda, contribuciones de código, errores, sugerencias, o incluso que lo usarán para ustedes mismos. Realmente funciona y es gratis.&lt;/p&gt;
&lt;p style="text-align: right;"&gt;
davidmeirlevy
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="es-el-futuro"&gt;
¿Es el futuro?
&lt;a href="#es-el-futuro" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Claramente los que somos desarrolladores y alguna vez utilizamos PHP sabemos que es un lenguaje que fue (y aun es) útil, peor no es para nada bueno. Con esto no quiero decir que JS sea bueno, pero podemos decir objetivamente que es levemente “menos peor”.
PHP tiene popularidad solo porque corre en cualquier lado, y se encuentra funcionando en gran parte de la internet. Pero esto no quiere decir que sea bueno, simplemente es más utilizado.&lt;/p&gt;
&lt;p&gt;Este proyecto procura poder ofrecer una solución a WP un tanto más renovada tecnológicamente. Dando así mejores posibilidades de desarrollo y crecimiento a nuestro emprendimiento (por ejemplo, un blog) Y puede, con ayuda de la comunidad, ser uno de los grandes proyectos que inicie el cambio en Internet.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="caracteristicas"&gt;
Caracteristicas
&lt;a href="#caracteristicas" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Gestión de configuración.&lt;/li&gt;
&lt;li&gt;La configuración debe tener opciones como:
&lt;ul&gt;
&lt;li&gt;Nombre del blog (predeterminado: &amp;ldquo;Mi sitio web Greenpress&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Idioma (predeterminado: &amp;ldquo;en&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Dirección del sitio (predeterminado: &amp;ldquo;ltr&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;Descripción: para metadatos y SEO.&lt;/li&gt;
&lt;li&gt;Tema: debe implementar una API para obtener una lista de temas desde el frente del blog y reiniciar el frente del blog (con npm run build) para aplicar el tema en el cambio de campo.&lt;/li&gt;
&lt;li&gt;Font url: define el uso de fuentes de cdn como google-fonts.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Búsqueda básica de publicaciones: necesaria tanto para frontend como administracion.&lt;/li&gt;
&lt;li&gt;Características del administrador:
&lt;ul&gt;
&lt;li&gt;$notify para mensaje de éxito/error.&lt;/li&gt;
&lt;li&gt;El panel de administración es más fácil de usar.&lt;/li&gt;
&lt;li&gt;Administrar menús (crear / eliminar / actualizar)&lt;/li&gt;
&lt;li&gt;Selector de categoría de usuario para elementos de menús.&lt;/li&gt;
&lt;li&gt;Mejora UX, también compatible para uso móvil.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/greenpress" target="_blank" rel="noopener noreferrer" class="text-amber-500 hover:text-amber-600 dark:text-amber-500 dark:hover:text-amber-600 font-semibold"&gt;
&lt;i class="fab fa-github"&gt;&lt;/i&gt;&amp;nbsp;
Proyecto
&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>