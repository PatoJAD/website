<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Proyecto on PatoJAD | Pasion por la Tecnologia</title><link>https://patojad.com.ar/tags/proyecto/</link><description>Recent content in Proyecto on PatoJAD | Pasion por la Tecnologia</description><generator>Hugo -- gohugo.io</generator><language>es-AR</language><lastBuildDate>Thu, 02 Nov 2023 10:06:00 +0000</lastBuildDate><atom:link href="https://patojad.com.ar/tags/proyecto/index.xml" rel="self" type="application/rss+xml"/><item><title>Cómo estructurar mi proyecto Vue.js</title><link>https://patojad.com.ar/post/2023/11/c%C3%B3mo-estructurar-mi-proyecto-vue.js/</link><pubDate>Thu, 02 Nov 2023 10:06:00 +0000</pubDate><guid>https://patojad.com.ar/post/2023/11/c%C3%B3mo-estructurar-mi-proyecto-vue.js/</guid><description>&lt;p&gt;Cuando intento aprender algo nuevo, a menudo me enfrento a la pregunta de cómo estructurar mi proyecto. ¿Cuál es la mejor práctica para hacerlo? ¿Dónde debo colocar mis archivos para evitar el caos en el proyecto? Este artículo está dedicado principalmente a los desarrolladores que acaban de comenzar a aprender &lt;strong&gt;Vue.js&lt;/strong&gt;, pero también puede ser interesante para los veteranos de &lt;strong&gt;Vue.js&lt;/strong&gt; que deseen obtener una nueva perspectiva sobre este tema.&lt;/p&gt;
&lt;p&gt;Comencemos desde cero con la instalación de un nuevo proyecto utilizando Vue CLI.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vue create mi-asombrosa-app
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Después de la instalación, podrás ver la siguiente estructura de carpetas (esto también depende de las opciones que hayas seleccionado en Vue CLI; para este proyecto, he seleccionado todas las opciones posibles):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;span class="lnt"&gt;20
&lt;/span&gt;&lt;span class="lnt"&gt;21
&lt;/span&gt;&lt;span class="lnt"&gt;22
&lt;/span&gt;&lt;span class="lnt"&gt;23
&lt;/span&gt;&lt;span class="lnt"&gt;24
&lt;/span&gt;&lt;span class="lnt"&gt;25
&lt;/span&gt;&lt;span class="lnt"&gt;26
&lt;/span&gt;&lt;span class="lnt"&gt;27
&lt;/span&gt;&lt;span class="lnt"&gt;28
&lt;/span&gt;&lt;span class="lnt"&gt;29
&lt;/span&gt;&lt;span class="lnt"&gt;30
&lt;/span&gt;&lt;span class="lnt"&gt;31
&lt;/span&gt;&lt;span class="lnt"&gt;32
&lt;/span&gt;&lt;span class="lnt"&gt;33
&lt;/span&gt;&lt;span class="lnt"&gt;34
&lt;/span&gt;&lt;span class="lnt"&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--public
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----img
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------icons
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----favicon.ico
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----index.html
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----robots.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--src
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----assets
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------logo.png
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----components
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------HelloWorld.vue
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----router
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------index.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----store
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------index.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----views
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------About.vue
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------Home.vue
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----App.vue
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----main.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----registerServiceWorkers.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----shims-vue.d.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--tests
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----e2e
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----unit
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--.browserslistrc
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--.eslintrc.js
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--.gitignore
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--babel.config.js
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--cypress.json
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--jest.config.js
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--package.json
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--package-lock.json
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--README.md
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--tsconfig.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Esta es una estructura bastante estándar, pero no es adecuada para aplicaciones de tamaño medio o grande. Nos centraremos en la carpeta &amp;ldquo;src&amp;rdquo;, pero antes de continuar, echemos un vistazo rápido a otras carpetas.&lt;/p&gt;
&lt;p&gt;La carpeta &lt;code&gt;public&lt;/code&gt; se utiliza si necesitas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Archivos con nombres especiales en la salida de compilación.&lt;/li&gt;
&lt;li&gt;Referencias dinámicas para imágenes. (Aunque es mejor usar &lt;code&gt;@/assets/&lt;/code&gt; para esto).&lt;/li&gt;
&lt;li&gt;Si la biblioteca es incompatible con Webpack.&lt;/li&gt;
&lt;li&gt;Puedes encontrar más información sobre cómo utilizar la carpeta &lt;code&gt;public&lt;/code&gt; aquí.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests/e2e&lt;/code&gt; es para pruebas de extremo a extremo.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tests/unit&lt;/code&gt; es para pruebas unitarias.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="estructura-de-la-carpeta-src"&gt;
Estructura de la carpeta &lt;code&gt;src&lt;/code&gt;
&lt;a href="#estructura-de-la-carpeta-src" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Ahora, empecemos a estructurar nuestra carpeta &amp;ldquo;src&amp;rdquo; en el nuevo proyecto. Aquí está la estructura que me gustaría presentar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;src
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--assets
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--common
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--layouts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--middlewares
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--modules
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--plugins
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--router
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--services
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--static
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--store
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--views
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Recorreremos todas las carpetas una por una y entenderemos por qué las necesitamos.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;assets&lt;/code&gt;: En este directorio, almacenaremos todos los archivos de activos. Aquí queremos guardar fuentes, iconos, imágenes, estilos, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;common&lt;/code&gt;: Esta carpeta se utiliza para guardar archivos comunes. Por lo general, se puede dividir en múltiples carpetas internas: componentes, mezclas, directivas, etc., o archivos individuales, como &lt;code&gt;funciones.ts&lt;/code&gt;, &lt;code&gt;helpers.ts&lt;/code&gt;, &lt;code&gt;constants.ts&lt;/code&gt;, &lt;code&gt;config.ts&lt;/code&gt; y otros. La principal razón para poner un archivo en esta carpeta es utilizarlo en muchos lugares. Por ejemplo, dentro de &lt;code&gt;src/common/components&lt;/code&gt; puedes almacenar &lt;code&gt;Button.vue&lt;/code&gt;, un componente compartido utilizado en toda la aplicación. En &lt;code&gt;helpers.ts&lt;/code&gt;, puedes escribir una función común para usar en varios lugares.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;layouts&lt;/code&gt;: Ya he abordado el problema de los diseños en uno de mis artículos anteriores. Puedes guardar los diseños de tu aplicación en este directorio. Por ejemplo: &lt;code&gt;AppLayout.vue&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;middlewares&lt;/code&gt;: Este directorio trabaja estrechamente con Vue Router. Puedes almacenar tus guards de navegación en esta carpeta. Aquí tienes un breve ejemplo de un middleware:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-javascript" data-lang="javascript"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;checkAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;y úsalo dentro de Vue Router:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-javascript" data-lang="javascript"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;vue-router&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;checkAuth&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;../middlewares/checkAuth.js&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isAuthenticated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;history&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;checkAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;modules&lt;/code&gt;: Este es el núcleo de nuestra aplicación. Aquí almacenamos todos nuestros módulos, partes lógicamente separadas de nuestra aplicación. Te animo a que, dentro de cada módulo, crees:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Una carpeta de componentes internos donde puedes guardar tus componentes Vue.&lt;/li&gt;
&lt;li&gt;Una carpeta de pruebas (prefiero mantener todas las pruebas relacionadas en el módulo).&lt;/li&gt;
&lt;li&gt;Un archivo &lt;code&gt;store.ts&lt;/code&gt; o un directorio &lt;code&gt;store&lt;/code&gt;, donde mantengas el módulo de Vuex (o Pinia). Por ejemplo, este es un ejemplo de un módulo de pedidos, donde almacenas todos los componentes relacionados con los pedidos en tu aplicación: lista de pedidos, detalles del pedido, etc. Módulo de Vuex de pedidos. Archivos relacionados adicionales. Puede verse así:
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-zsh" data-lang="zsh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;src
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--modules
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;----orders
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------__tests__
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------components
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--------OrdersList.vue
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--------OrderDetails.vue
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------store
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--------actions.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--------getters.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--------mutations.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;--------state.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------helpers.ts
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------types.ts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;plugins&lt;/code&gt;: En esta carpeta puedes crear y conectar todos tus plugins. Aquí tienes un ejemplo de conexión de un plugin en Vue 2:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-javascript" data-lang="javascript"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MyPlugin&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./myPlugin.ts&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MyPlugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;someOption&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;En Vue 3, conectarás tu plugin en &lt;code&gt;main.ts&lt;/code&gt;. Pero aún puedes crear tus plugins dentro de la carpeta &lt;code&gt;plugins&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;services&lt;/code&gt;: Esta carpeta es necesaria para almacenar tus servicios. Por ejemplo, puedes crear y guardar un servicio de conexiones API, un servicio de gestión de almacenamiento local, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt;: Por lo general, no necesitas esta carpeta. Puede usarse para guardar algunos datos ficticios.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;router&lt;/code&gt;: Dentro de este directorio puedes almacenar todos los archivos relacionados con Vue Router. Puede ser solo &lt;code&gt;index.ts&lt;/code&gt; con el enrutador y las rutas en un solo lugar (en este caso, probablemente sea una buena idea almacenar este archivo en la raíz de &lt;code&gt;src&lt;/code&gt;). Yo prefiero separar el enrutador y las rutas en dos archivos diferentes para evitar confusiones.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;store&lt;/code&gt;: Este es el directorio de Vuex donde puedes almacenar todos los archivos relacionados con Vuex. Dado que deseas separar tus módulos de Vuex, en esta carpeta debes almacenar el estado raíz, las acciones, las mutaciones y los getters, y conectar automáticamente todos los módulos de Vuex desde el directorio de módulos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;views&lt;/code&gt;: Esta es la segunda carpeta más importante de nuestra aplicación. Aquí almacenamos todos los puntos de entrada para las rutas de la aplicación. Por ejemplo, en tu aplicación puedes tener rutas como &lt;code&gt;/home&lt;/code&gt;, &lt;code&gt;/about&lt;/code&gt;, &lt;code&gt;/orders&lt;/code&gt;. Respectivamente, en la carpeta &lt;code&gt;views&lt;/code&gt; deberías tener &lt;code&gt;Home.vue&lt;/code&gt;, &lt;code&gt;About.vue&lt;/code&gt;, &lt;code&gt;Orders.vue&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Podrías preguntarte por qué debemos separar vistas y módulos si podemos almacenarlos en el mismo lugar. Veo algunas ventajas en separarlos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Estructura de archivos más clara.&lt;/li&gt;
&lt;li&gt;Te permite comprender rápidamente qué rutas tienes en la aplicación.&lt;/li&gt;
&lt;li&gt;Facilita la comprensión de cuál archivo es la raíz de la página y dónde comienza a funcionar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="conclusiones"&gt;
Conclusiones
&lt;a href="#conclusiones" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;En este artículo, compartí mi enfoque para crear aplicaciones Vue basado en mi experiencia de trabajo en muchas aplicaciones Vue diferentes. Por supuesto, estas son solo sugerencias, y eres libre de usar todas, algunas o ninguna de ellas. Espero que este artículo ayude a algunos desarrolladores a estructurar sus proyectos de una manera nueva y les brinde más ideas.&lt;/p&gt;</description></item><item><title>El Proyecto “ACCESSIBLE BINARY”</title><link>https://patojad.com.ar/post/2019/10/el-proyecto-accessible-binary/</link><pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate><guid>https://patojad.com.ar/post/2019/10/el-proyecto-accessible-binary/</guid><description>&lt;p&gt;&lt;strong&gt;A grandes rasgos se presenta así de una manera global sin embargo cada parte implica otras subdivisiones, puesto que, el proyecto “ACCESSIBLE BINARY” es bastante ambicioso y complejo para ejecutarlo todo de una vez. De esta manera, como se está presentando ahora se hace de fácil comprensión para todo aquel que desee colaborar.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;En este proyecto puede entrar cualquier persona que desee colaborar, no supone inversión monetaria, sólo la inversión más valiosa que puedes dar y son las horas/hombre. (Nuestra meta es llegar a un millón de colaboradores a lo largo y ancho de todo el mundo. ¿Lo lograremos? Seguramente lo haremos y tú eres una pieza importante para construir esta macrored)&lt;/li&gt;
&lt;li&gt;Este proyecto es &lt;strong&gt;UNIVERSAL&lt;/strong&gt; , está pensado y basado en los siguientes términos (Diseño universal, Accesibilidad Universal, Accesibilidad Web, Integración, Convivencia, Usabilidad)&lt;/li&gt;
&lt;li&gt;Esto es un proyecto moldeable, modular y pensado para llevarlo a cabo de manera colaborativa, donde cada uno pondrá de sus conocimientos para que esto sea una realidad. “Divide y vencerás” en el sentido de pequeñas tareas para lograr resolver un problema grande.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ayudarnos sin límites&lt;/strong&gt; es la premisa, si logramos realizar este proyecto estaremos contribuyendo al desarrollo humano enfocado en el entendimiento para el mejor avance tecnológico de la historia. “Una máquina puede pensar siempre y cuando el humano que la haga pensar también sepa cómo hacerlo”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class="flex flex-wrap justify-center"&gt;
&lt;img src="https://blog.ida.cl/wp-content/uploads/sites/5/2019/03/Usabilidad-y-accesibilidad-655x470.png" alt="" title="" loading="lazy" decoding="async" class="rounded-xl" /&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="i-parte-investigación"&gt;
I PARTE: INVESTIGACIÓN
&lt;a href="#i-parte-investigaci%c3%b3n" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;El proceso investigativo de este proyecto es bastante truncado, sin embargo nos estaremos basando en la información que se nos proporciona vía internet y también con investigación de campo, a través de los diferentes colaboradores que se adhieran al proyecto en esta área.&lt;/p&gt;
&lt;p&gt;Es necesario educar, incentivar y motivar a cada individuo a desarrollar actividades que son una constante hoy en día, es decir, proveer materiales y herramientas para todos aquellos que deseen aprender y reforzar conocimientos, así como desarrollar actividades técnicas y tecnológicas.&lt;/p&gt;
&lt;p&gt;Esta es una de las partes más importantes en sí del proyecto, ya que sin bases teóricas no podremos avanzar a una práctica.&lt;/p&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="ii-parte-educación-y-enseñanza"&gt;
II PARTE: EDUCACIÓN Y ENSEÑANZA
&lt;a href="#ii-parte-educaci%c3%b3n-y-ense%c3%b1anza" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Buscamos que a través de la educación, la enseñanza y el compartir conocimientos, valiéndonos de recursos tanto humanos como tecnológicos, dar a conocer de manera enfática todas las terminologías anteriormente señaladas. Todo esto con el fin de hacer el cambio hacia la universalidad.&lt;/p&gt;
&lt;h4 class="text-gray-500 text-3xl my-6" id="de-los-recursos-humanos"&gt;
De los recursos humanos:
&lt;a href="#de-los-recursos-humanos" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;Personas con conocimientos básicos, intermedios o avanzados que puedan generar contenidos a partir de informaciones poco conocidas, debemos indagar un poco, investigar en internet y en nuestras localidades, necesitamos personas que sean proactivas y muy creativas con conocimientos en pedagogía y metodologías de enseñanzas múltiples, profesionales o no, a la hora de evaluar los perfiles de los colaboradores se tomará en cuenta su nivel de compromiso y disposición para ir generando las campañas correspondientes y abordando todo lo que esto implica.&lt;/p&gt;
&lt;h4 class="text-gray-500 text-3xl my-6" id="de-los-recursos-varios"&gt;
De los recursos varios:
&lt;a href="#de-los-recursos-varios" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;Nos disponemos a realizar actividades variadas con el único fin de impactar a la mayor cantidad de personas, a través de creación de formatos tipo podcast que podamos difundir por las redes de manera masiva y viral, videos educativos, vídeo tutoriales,&lt;/p&gt;
&lt;iframe src='https://www.youtube.com/embed/9Rd1Bhvw5Q0?rel=0' title="Video de Youtube"
class="w-full h-auto rounded-xl aspect-video mb-3" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;h4 class="text-gray-500 text-3xl my-6" id="introducción-al-concepto-accesibilidad-universal-diseño-universal-convivencia-integración"&gt;
Introducción al concepto “accesibilidad universal” (Diseño Universal, Convivencia, Integración)
&lt;a href="#introducci%c3%b3n-al-concepto-accesibilidad-universal-dise%c3%b1o-universal-convivencia-integraci%c3%b3n" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;Para este punto proponemos hacer un podcast donde estaremos hablando sobre el tema de accesibilidad desde el concepto general hasta el enfoque accesible para diseño web y de apps. La experiencia de todo aquel que se haya visto inmerso de manera parcial o total con herramientas de accesibilidad, visitado ciertas páginas web diseñadas con accesibilidad, apps e incluso chats donde puede que exista o no el diseño accesible. Hablar de que este concepto es universal por una razón y que de este tipo de aplicativos e implementaciones se beneficia toda persona no necesariamente alguien catalogado de “discapacitado”.&lt;/p&gt;
&lt;h3 class="text-gray-500 text-3xl my-6" id="herramientas-accesibilidad-existentes"&gt;
Herramientas accesibilidad existentes:
&lt;a href="#herramientas-accesibilidad-existentes" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h3&gt;&lt;h4 class="text-gray-500 text-3xl my-6" id="privadas"&gt;
Privadas:
&lt;a href="#privadas" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/es-es/Accessibility/windows" target="_blank" rel="noopener noreferrer" class="text-amber-500 hover:text-amber-600 dark:text-amber-500 dark:hover:text-amber-600 font-semibold"&gt;
&lt;i class="fas fa-up-right-from-square"&gt;&lt;/i&gt;&amp;nbsp;
https://www.microsoft.com/es-es/Accessibility/windows
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 class="text-gray-500 text-3xl my-6" id="libres"&gt;
Libres:
&lt;a href="#libres" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Orca&lt;/strong&gt;. Un lector y magnificador de pantalla para Linux que además, ofrece la posibilidad de trabajar con Braille. Es un proyecto que forma parte del entorno de escritorio Gnome.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NVDA&lt;/strong&gt;. El lector de pantalla para Windows de software libre que más ha mejorado en los últimos años. La gran cantidad de funcionalidades que presenta lo ha convertido en el segundo lector de pantalla del mercado por detrás del propietario JAWS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linaccess-knoppix&lt;/strong&gt;. Otro lector de pantalla, en este caso desarrollado en el marco del proyecto Linacess.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FireVox&lt;/strong&gt;. Un lector de pantalla que funciona como extensión para el navegador Mozilla Firefox. Fácil de instalar y utilizar pero con funciones limitadas a la navegación web. Es decir, no sirve como lector de pantalla para aplicaciones de escritorio.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ChromeVox&lt;/strong&gt;. La alternativa a FireVox para usuarios del navegador Chrome y Chromium. Como en el caso de FireVox, sus funciones se limitan a la navegación web.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gnopernicus&lt;/strong&gt;. Otra herramienta para el escritorio Gnome. Se trata de un paquete de utilidades formado por una lupa ampliadora de pantalla, seguimiento del foco del teclado y salida Braille entre otros.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kmagnifier&lt;/strong&gt;. Una lupa o magnificador de pantalla para Linux.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XZoom&lt;/strong&gt;. Una lupa magnificadora para Linux que presenta como principal característica diferenciadora la capacidad para actualizar continuamente el área magnificada.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;KeyTouch&lt;/strong&gt;. Una aplicación que permite configurar funciones extra para realizar más acciones con el teclado. No se trata de un proyecto creado específicamente en el ámbito de la accesibilidad, pero puede resultar útil a muchas personas con discapacidad.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dasher&lt;/strong&gt;. Una aplicación que permite escribir a través de un sistema predictivo basado en el movimiento del puntero del ratón, lo que permite sustituir la escritura a través de una interfaz de teclado por movimientos de ratón. Especialmente útil para discapacitados motrices.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gok&lt;/strong&gt;. Un teclado alfanumérico virtual para Linux que permite prescindir del teclado tradicional a usuarios que no son capaces de teclear, pero sí de marcar las teclas con un cursor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OpenMindSpeech&lt;/strong&gt;. Una aplicación para Linux (KDE y Gnome) de reconocimiento de voz.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="iii-parte-desarrollo"&gt;
III PARTE: DESARROLLO
&lt;a href="#iii-parte-desarrollo" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;La herramienta a desarrollar a largo plazo es una herramienta subdividida en módulos, la cual debe de cumplir con lo expuesto a manera de propuesta inicial, emanado de un proceso previo de indagación. Asi mismo, Estamos conscientes que para lograr cada parte se deberá contar con profesionales especialistas en cada tema, tenemos la esperanza de reunir dichos profesionales una vez sea planteado formalmente este proyecto:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Esta herramienta sería &lt;strong&gt;un todo en uno&lt;/strong&gt; de la manera que desglosamos a continuación:&lt;/p&gt;
&lt;h4 class="text-gray-500 text-3xl my-6" id="módulo-1-voz-humana"&gt;
Módulo 1: Voz humana
&lt;a href="#m%c3%b3dulo-1-voz-humana" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;Porque según la experiencia de varios usuarios con respecto a los lectores de pantalla actuales, estos no cuentan con un sintetizador de voz agradable. Los que existen de manera gratuita no son agradables, otros no son fáciles de conseguir, y los que son excelentes hay que pagar por su uso. Cabe destacar que no necesariamente esta herramienta será de uso exclusivo para personas no videntes, puesto que existen en el mundo personas sensibles auditivas y no necesariamente es que tengan visión parcial o nula.&lt;/p&gt;
&lt;h4 class="text-gray-500 text-3xl my-6" id="módulo-2-reconocimiento-de-voz-a-través-lenguaje-natura-l"&gt;
Módulo 2: Reconocimiento de voz a través Lenguaje Natura l
&lt;a href="#m%c3%b3dulo-2-reconocimiento-de-voz-a-trav%c3%a9s-lenguaje-natura-l" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;Seria perfecto por temas de accesibilidad universal. A través de la voz se puede entonces interactuar a pleno sin ocupar un teclado especial, cualquier persona puede usarlo, aquellos que no puedan usar su voz, pueden interactuar de manera mecánica o insertando texto en un panel de escritura con la herramienta. No es un chatbot cabe aclarar, queremos que esta herramienta sea lo más inteligente posible dando&lt;/p&gt;
&lt;h4 class="text-gray-500 text-3xl my-6" id="módulo-3-inteligencia-artificial"&gt;
Módulo 3: Inteligencia Artificial
&lt;a href="#m%c3%b3dulo-3-inteligencia-artificial" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;p&gt;De acuerdo a los principios que emanan de este concepto donde se nos deja en claro que para que exista IA necesariamente debe de existir un comportamiento racional, lógico y también con hechos probabilísticos. Para interacción inteligente con la propia herramienta y obtener alternativas óptimas y eficientes, esta debe de seguir estos lineamientos. Aqui un tema complejo que se puede manejar a base de listas y de planteamientos lógicos que den como resultado alternativas basadas en la lectura del comportamiento del usuario por parte del software embebido dentro de la herramienta, proporcionando alternativas lógicas y acordes a su requerimiento.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sugerencia de algunos tipos de algoritmos que podemos utilizar para hacer este proyecto una realidad:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Aunque definir exactamente qué es la inteligencia es bastante complicado, en la práctica sí que podemos decir qué queremos de un sistema que sea &amp;ldquo;inteligente&amp;rdquo;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Queremos que sea capaz de reconocer patrones (imágenes o sonidos) para que pueda recibir información del mundo exterior.&lt;/li&gt;
&lt;li&gt;Queremos que sea capaz de aprender filtrando la información útil y guardando sus nuevos descubrimientos.&lt;/li&gt;
&lt;li&gt;Y por último, queremos que también sea capaz de razonar y deducir - en otras palabras, que sea capaz de crear &lt;strong&gt;conocimiento&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Clasificador bayesiano ingenuo&lt;/strong&gt;: es un clasificador probabilístico fundamentado en el teorema de Bayes y algunas hipótesis simplificadoras adicionales.&lt;/p&gt;
&lt;p&gt;Se maneja básicamente siguiendo un esquema de repetición clasificando y separando “objetos” dentro del código.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reconocimiento de voz con redes neuronales profundas&lt;/strong&gt;: Estos sistemas pueden ser entrenados: se les alimenta con &amp;ldquo;pedazos&amp;rdquo; de audio y su transcripción para que aprendan cómo funciona el habla. Así extraen reglas que, aunque probablemente incomprensibles y extrañas para nosotros, sirven para identificar palabras mucho mejor que otros modelos inspirados en supuestos de cómo funciona nuestro lenguaje y nuestra voz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Análisis sintáctico&lt;/strong&gt;: Analizador sintáctico de oraciones: se centra en el análisis automático de las relaciones sintácticas que se establecen entre los pares de palabras que la componen: su tipo de relación de dependencia, qué palabra es nuclear y cuál dependiente, su categoría gramatical y su posición en la frase.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lógica difusa&lt;/strong&gt;: La Lógica Difusa actualmente está relacionada y fundamentada en la teoría de los Conjuntos Difusos. Según esta teoría, el grado de pertenencia de un elemento a un conjunto va a venir determinado por una función de pertenencia, que puede tomar todos los valores reales comprendidos en el intervalo [0,1]&lt;/p&gt;
&lt;p&gt;&lt;div class="flex flex-wrap justify-center"&gt;
&lt;img src="http://image.basekit.com/live256922_accesibilidad_1.png" alt="" title="" loading="lazy" decoding="async" class="rounded-xl" /&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h4 class="text-gray-500 text-3xl my-6" id="lenguajes-para-desarrollo"&gt;
Lenguajes para desarrollo:
&lt;a href="#lenguajes-para-desarrollo" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt; se le considera en el primer lugar de la lista de todos los lenguajes de desarrollo de AI debido a la simplicidad. Las sintaxis que pertenecen a python son muy simples y se pueden aprender fácilmente. Por lo tanto, muchos algoritmos de IA se pueden implementar fácilmente en él. Python tarda poco tiempo de desarrollo en comparación con otros lenguajes como Java, C++ o Ruby.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt; es uno de los lenguajes y entornos más efectivos para analizar y manipular los datos con fines estadísticos. Usando R, podemos producir fácilmente un publication-quality plot bien diseñado, incluyendo símbolos matemáticos y fórmulas donde sea necesario.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lisp&lt;/strong&gt; es uno de los lenguajes más antiguos y más adecuados para el desarrollo en IA. Fue inventado por John McCarthy, el padre de la Inteligencia Artificial en 1958. Tiene la capacidad de procesar la información simbólica de manera efectiva.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prolog&lt;/strong&gt; Este lenguaje se mantiene junto con Lisp cuando hablamos de desarrollo en el campo de la IA. Las características proporcionadas por éste incluyen una coincidencia de patrones eficiente, estructuración de datos basada en árboles y backtracking automático. Todas estas características proporcionan un marco de programación sorprendentemente potente y flexible. Prolog es ampliamente utilizado para trabajar en proyectos médicos y también para diseñar sistemas de IA expertos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java&lt;/strong&gt; también se puede considerar como una buena opción para el desarrollo de inteligencia artificial. La inteligencia artificial tiene mucho que ver con algoritmos de búsqueda, redes neuronales artificiales y programación genética.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 class="text-amber-500 text-3xl my-6" id="conclusiones"&gt;
Conclusiones:
&lt;a href="#conclusiones" class="text-gray-500"&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;El &lt;strong&gt;Proyecto “ACCESSIBLE BINARY”&lt;/strong&gt; es a nuestra consideración algo a realizar paso a paso, no hay ahora mismo una meta en tiempo, lo que vamos a estar calculando una vez podamos asignar personas interesadas a cada módulo, de la siguiente forma; en un inicio los interesados en formar parte aplican al siguiente formulario&lt;/p&gt;
&lt;iframe src="https://docs.google.com/forms/d/e/1FAIpQLSe8TqrszNCk6hcOYkuSbpd9pTikxgW28LiCv4GomzvHqSp_rw/viewform?embedded=true" width="100%" height="520" marginheight="0" marginwidth="0"&gt;Cargando…&lt;/iframe&gt;
&lt;p&gt;y una vez evaluado el perfil, hecho una previa entrevista se asigna esa persona a un módulo específico, ya sea del área de investigación, enseñanza o desarrollo. Una vez hecho esto se podrá definir un tiempo con metas y actividades.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Una vez desarrollado cada módulo se irá testeando, y haciendo mediciones en cada punto. El primer sistema operativo donde se solicitaría hacer pruebas en una etapa avanzada es sobre GNU/Linux&lt;/li&gt;
&lt;li&gt;Iremos hasta donde nos lleve este proyecto es algo bastante grande y muy ambicioso, gracias por formar parte.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="text-center"&gt;**“ACCESSIBLE BINARY” TEAM**
La accesibilidad universal es el FUTURO&lt;/div&gt;</description></item></channel></rss>